services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: materials
    command:
        bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    environment:
      - DEBUG=True
      - HOST=${HOST}
      - SECRET_KEY=${SECRET_KEY}
      - USER=${USER}
      - PASSWORD=${PASSWORD}
      - NAME=${NAME}
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    env_file:
      - .env

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    env_file:
      - .env
    volumes:
      - redis_data:/data

  celery:
    build:
      context: .
    container_name: celery_worker
    command:
      celery -A config worker -l INFO
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis

  celery_beat:
    build:
      context: .
    container_name: celery_beat
    command:
      celery -A config beat --loglevel=INFO
    env_file:
      - .env
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
      - celery

volumes:
  postgres_data:
  redis_data:
  static_volume:

networks:
  default: